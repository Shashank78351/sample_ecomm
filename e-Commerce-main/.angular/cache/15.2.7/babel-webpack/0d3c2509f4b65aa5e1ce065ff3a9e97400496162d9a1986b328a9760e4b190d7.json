{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SharedService {\n  constructor(http) {\n    this.http = http;\n    // private messageSource=new BehaviorSubject<Product[]>([]);\n    // currentValue=this.messageSource.asObservable();\n    // constructor() { }\n    // changeValue(product:any){\n    //   console.log(\"line number 14\",product)\n    //   this.messageSource.next(product);\n    // }\n    this.apiUrl = '/http://localhost:3000';\n  }\n  getProducts() {\n    return this.http.get(`${this.apiUrl}/products`);\n  }\n  getProduct(id) {\n    return this.http.get(`${this.apiUrl}/products/${id}`);\n  }\n  addToCart(product) {\n    // Assuming you have some cart management logic here\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    cart.push(product);\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n}\nSharedService.ɵfac = function SharedService_Factory(t) {\n  return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient));\n};\nSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedService,\n  factory: SharedService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,aAAa;EAWxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAVxB;IAEA;IACA;IACA;IACA;IACA;IAEA;IACQ,WAAM,GAAG,wBAAwB;EACJ;EAGrCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EAC5D;EAEAC,UAAU,CAACC,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,MAAM,aAAaE,EAAE,EAAE,CAAC;EAChE;EACAC,SAAS,CAACC,OAAgB;IACxB;IACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAC3DJ,IAAI,CAACK,IAAI,CAACN,OAAO,CAAC;IAClBI,YAAY,CAACG,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACM,SAAS,CAACP,IAAI,CAAC,CAAC;EACpD;;AA1BWV,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAkB,SAAblB,aAAa;EAAAmB,YAFZ;AAAM","names":["SharedService","constructor","http","getProducts","get","apiUrl","getProduct","id","addToCart","product","cart","JSON","parse","localStorage","getItem","push","setItem","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\KS00927982\\Documents\\eCommerce-main\\eCommerce-main\\src\\app\\services\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n// import { BehaviorSubject } from 'rxjs';\nimport { Product } from '../product-list/product.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  // private messageSource=new BehaviorSubject<Product[]>([]);\n  \n  // currentValue=this.messageSource.asObservable();\n  // constructor() { }\n  // changeValue(product:any){\n  //   console.log(\"line number 14\",product)\n  //   this.messageSource.next(product);\n\n  // }\n  private apiUrl = '/http://localhost:3000';\n  constructor(private http:HttpClient){}\n  \n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(`${this.apiUrl}/products`);\n  }\n \n  getProduct(id: number): Observable<Product> {\n    return this.http.get<Product>(`${this.apiUrl}/products/${id}`);\n  }\n  addToCart(product: Product): void {\n    // Assuming you have some cart management logic here\n    let cart = JSON.parse(localStorage.getItem('cart') || '[]');\n    cart.push(product);\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}