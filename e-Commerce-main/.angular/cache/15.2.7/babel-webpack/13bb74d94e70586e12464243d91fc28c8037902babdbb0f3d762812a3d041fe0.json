{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nlet CartService = class CartService {\n  constructor(sharedService) {\n    this.sharedService = sharedService;\n    this.cartItems = []; // Replace any with your actual item type\n    this.cartSubject = new BehaviorSubject([]);\n  }\n  addToCart(item) {\n    this.cartItems.push(item);\n    this.cartSubject.next(this.cartItems);\n  }\n  removeFromCart(id) {\n    this.cartItems.splice(id, 1);\n    this.cartSubject.next(this.cartItems);\n  }\n  getCartItems() {\n    return this.cartSubject.asObservable();\n  }\n};\nCartService = __decorate([Injectable({\n  providedIn: 'root'\n})], CartService);\nexport { CartService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,eAAe,QAAQ,MAAM;AAK/B,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAItBC,YAAoBC,aAA0B;IAA1B,kBAAa,GAAbA,aAAa;IAHzB,cAAS,GAAU,EAAE,CAAC,CAAC;IACvB,gBAAW,GAAG,IAAIH,eAAe,CAAQ,EAAE,CAAC;EAEF;EAElDI,SAAS,CAACC,IAAS;IACjB,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,IAAI,CAAC;IACzB,IAAI,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAACH,SAAS,CAAC;EACvC;EAEAI,cAAc,CAACC,EAAU;IACvB,IAAI,CAACL,SAAS,CAACM,MAAM,CAACD,EAAE,EAAE,CAAC,CAAC;IAC5B,IAAI,CAACH,WAAW,CAACC,IAAI,CAAC,IAAI,CAACH,SAAS,CAAC;EACvC;EAEAO,YAAY;IACV,OAAO,IAAI,CAACL,WAAW,CAACM,YAAY,EAAE;EACxC;CACD;AAnBYb,WAAW,eAHvBF,UAAU,CAAC;EACVgB,UAAU,EAAE;CACb,CAAC,GACWd,WAAW,CAmBvB;SAnBYA,WAAW","names":["Injectable","BehaviorSubject","CartService","constructor","sharedService","addToCart","item","cartItems","push","cartSubject","next","removeFromCart","id","splice","getCartItems","asObservable","providedIn"],"sourceRoot":"","sources":["C:\\Users\\KS00927982\\Documents\\eCommerce-main\\eCommerce-main\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  private cartItems: any[] = []; // Replace any with your actual item type\n  private cartSubject = new BehaviorSubject<any[]>([]);\n \n  constructor(private sharedService:haredService) { }\n \n  addToCart(item: any) {\n    this.cartItems.push(item);\n    this.cartSubject.next(this.cartItems);\n  }\n \n  removeFromCart(id: number) {\n    this.cartItems.splice(id, 1);\n    this.cartSubject.next(this.cartItems);\n  }\n \n  getCartItems() {\n    return this.cartSubject.asObservable();\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}