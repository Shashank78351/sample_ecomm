{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/product.service\";\nfunction ConfirmOrderComponent_div_0_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.productId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.price);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.quantity);\n  }\n}\nfunction ConfirmOrderComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\");\n    i0.ɵɵtext(2, \"Confirm Order\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"table\", 3)(4, \"thead\")(5, \"tr\")(6, \"th\");\n    i0.ɵɵtext(7, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Price\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Quantity\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, ConfirmOrderComponent_div_0_tr_15_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"h1\");\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"h1\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ConfirmOrderComponent_div_0_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.confirmOrder());\n    });\n    i0.ɵɵtext(21, \"Confirm Order\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.cartItems);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Items: \", ctx_r0.totalItems, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Price: \", ctx_r0.totalPrice, \"\");\n  }\n}\nfunction ConfirmOrderComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Your cart is empty.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class ConfirmOrderComponent {\n  constructor(productService) {\n    this.productService = productService;\n    this.cartItems = [];\n    this.totalItems = 0;\n    this.totalPrice = 0;\n  }\n  ngOnInit() {\n    this.productService.cartItems$.subscribe(cartItems => {\n      this.cartItems = cartItems;\n      this.calculateTotals();\n    }, error => {\n      console.error('Error fetching cart items:', error);\n    });\n    this.productService.fetchCartItems(); // Initial load of cart items\n  }\n\n  calculateTotals() {\n    this.totalItems = this.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    this.totalPrice = this.cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0);\n  }\n  confirmOrder() {\n    this.productService.confirmOrder().subscribe(response => {\n      console.log('Order confirmed:', response);\n      alert('Order confirmed successfully!');\n      this.productService.clearCart();\n    }, error => {\n      console.error('Error confirming order:', error);\n      alert('Error confirming order. Please try again.');\n    });\n  }\n}\nConfirmOrderComponent.ɵfac = function ConfirmOrderComponent_Factory(t) {\n  return new (t || ConfirmOrderComponent)(i0.ɵɵdirectiveInject(i1.ProductService));\n};\nConfirmOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfirmOrderComponent,\n  selectors: [[\"app-confirm-order\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function ConfirmOrderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ConfirmOrderComponent_div_0_Template, 22, 3, \"div\", 0);\n      i0.ɵɵtemplate(1, ConfirmOrderComponent_div_1_Template, 3, 0, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length > 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.cartItems.length === 0);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;IAYQA,0BAAmC;IAC7BA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAmB;IAAAA,iBAAK;;;;IAHxBA,eAAoB;IAApBA,uCAAoB;IACpBA,eAAe;IAAfA,kCAAe;IACfA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAmB;IAAnBA,sCAAmB;;;;;;IAhBjCA,8BAAoD;IAC5CA,6BAAa;IAAAA,iBAAK;IACtBA,gCAAqB;IAGXA,kBAAE;IAAAA,iBAAK;IACXA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,2BAAI;IAAAA,sBAAK;IAAAA,iBAAK;IACdA,2BAAI;IAAAA,yBAAQ;IAAAA,iBAAK;IAGrBA,8BAAO;IACLA,4EAKK;IACPA,iBAAQ;IAEVA,2BAAI;IAAAA,aAA6B;IAAAA,iBAAK;IACtCA,2BAAI;IAAAA,aAA6B;IAAAA,iBAAK;IACtCA,kCAAiC;IAAzBA;MAAAA;MAAA;MAAA,OAASA,oCAAc;IAAA,EAAC;IAACA,8BAAa;IAAAA,iBAAS;;;;IAV9BA,gBAAY;IAAZA,0CAAY;IAQjCA,eAA6B;IAA7BA,6DAA6B;IAC7BA,eAA6B;IAA7BA,6DAA6B;;;;;IAInCA,2BAAoC;IAC/BA,mCAAmB;IAAAA,iBAAI;;;AChB9B,OAAM,MAAOC,qBAAqB;EAKhCC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJlC,cAAS,GAAc,EAAE;IACzB,eAAU,GAAW,CAAC;IACtB,eAAU,GAAW,CAAC;EAEgC;EAEtDC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,UAAU,CAACC,SAAS,CACrCC,SAAS,IAAI;MACZ,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,eAAe,EAAE;IACxB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;IACD,IAAI,CAACN,cAAc,CAACQ,cAAc,EAAE,CAAC,CAAC;EACxC;;EAEAH,eAAe;IACb,IAAI,CAACI,UAAU,GAAG,IAAI,CAACL,SAAS,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,QAAQ,EAAE,CAAC,CAAC;IAC9E,IAAI,CAACC,UAAU,GAAG,IAAI,CAACV,SAAS,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAIC,IAAI,CAACC,QAAQ,GAAGD,IAAI,CAACG,KAAM,EAAE,CAAC,CAAC;EAC/F;EAEAC,YAAY;IACV,IAAI,CAAChB,cAAc,CAACgB,YAAY,EAAE,CAACb,SAAS,CACzCc,QAAQ,IAAI;MACXV,OAAO,CAACW,GAAG,CAAC,kBAAkB,EAAED,QAAQ,CAAC;MACzCE,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACnB,cAAc,CAACoB,SAAS,EAAE;IACjC,CAAC,EACAd,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/Ca,KAAK,CAAC,2CAA2C,CAAC;IACpD,CAAC,CACF;EACH;;AArCWrB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVlC5B,uEAuBQ;MAENA,sEAEM;;;MA3BgBA,+CAA0B;MAyB1CA,eAA4B;MAA5BA,iDAA4B","names":["i0","ConfirmOrderComponent","constructor","productService","ngOnInit","cartItems$","subscribe","cartItems","calculateTotals","error","console","fetchCartItems","totalItems","reduce","acc","item","quantity","totalPrice","price","confirmOrder","response","log","alert","clearCart","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\KS00927982\\Documents\\eCommerce-main\\eCommerce-main\\src\\app\\confirm-order\\confirm-order.component.html","C:\\Users\\KS00927982\\Documents\\eCommerce-main\\eCommerce-main\\src\\app\\confirm-order\\confirm-order.component.ts"],"sourcesContent":["<div class=\"container\" *ngIf=\"cartItems.length > 0\">\n    <h1>Confirm Order</h1>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th>ID</th>\n          <th>Name</th>\n          <th>Price</th>\n          <th>Quantity</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of cartItems\">\n          <td>{{ item.productId }}</td>\n          <td>{{ item.name }}</td>\n          <td>{{ item.price }}</td>\n          <td>{{ item.quantity }}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h1>Total Items: {{ totalItems }}</h1>\n    <h1>Total Price: {{ totalPrice }}</h1>\n    <button (click)=\"confirmOrder()\">Confirm Order</button>\n  </div>\n   \n  <div *ngIf=\"cartItems.length === 0\">\n    <p>Your cart is empty.</p>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../product-list/product.model';\n\n \n@Component({\n  selector: 'app-confirm-order',\n  templateUrl: './confirm-order.component.html',\n  styleUrls: ['./confirm-order.component.css']\n})\nexport class ConfirmOrderComponent implements OnInit {\n  cartItems: Product[] = [];\n  totalItems: number = 0;\n  totalPrice: number = 0;\n \n  constructor(private productService: ProductService) { }\n \n  ngOnInit(): void {\n    this.productService.cartItems$.subscribe(\n      (cartItems) => {\n        this.cartItems = cartItems;\n        this.calculateTotals();\n      },\n      (error) => {\n        console.error('Error fetching cart items:', error);\n      }\n    );\n    this.productService.fetchCartItems(); // Initial load of cart items\n  }\n \n  calculateTotals(): void {\n    this.totalItems = this.cartItems.reduce((acc, item) => acc + item.quantity, 0);\n    this.totalPrice = this.cartItems.reduce((acc, item) => acc + (item.quantity * item.price), 0);\n  }\n \n  confirmOrder(): void {\n    this.productService.confirmOrder().subscribe(\n      (response) => {\n        console.log('Order confirmed:', response);\n        alert('Order confirmed successfully!');\n        this.productService.clearCart();\n      },\n      (error) => {\n        console.error('Error confirming order:', error);\n        alert('Error confirming order. Please try again.');\n      }\n    );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}